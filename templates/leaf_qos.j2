###############
# Ansible generated config, will be overwritten!
###############
{% set ifaces = {} %}
{% for p in range(1, 49) %}
{% set port_name = 'swp' + p|string %}
{% if access_ports is not none and port_name in access_ports %}
{% set port_config = access_ports[port_name] %}
{% else %}
{% set port_config = default_port_config %}
{% endif %}
{% do ifaces.update({port_name: port_config}) %}
{% endfor %}
{% set all_hosts = query('inventory_hostnames', 'all') %}
{% if all_hosts is defined %}
{% for host in all_hosts %}
{% if hostvars[host]['network_interfaces'] is defined %}
{% for nic in hostvars[host]["network_interfaces"] %}
{% if nic["switch"] is defined and nic["switch"] == inventory_hostname and
nic["switch_port_config"] is defined and nic["switch_port"] is defined %}
{% do ifaces.update(
   {nic["switch_port"]: nic["switch_port_config"]}) %}
{% endif %}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}
{% for port_name, pc in ifaces.items() | list %}
{% set port_config = port_configs[pc] %}
{% if port_config["qos"] is defined %}
{% if port_config["untagged"] is defined and port_config["tagged"] is undefined %}
configure ports {{ port_name }} med policy application {{ port_config["qos"] }} untagged vlan {{ port_config["untagged"] }} priority {{ port_config["qos"] }} dscp 46
{% elif port_config["tagged"] is defined
  and port_config["tagged"]|length >= 1 %}
configure ports {{ port_name }} med policy application {{ port_config["qos"] }} tagged vlan {{ port_config["tagged"] | join(" ") }} priority {{ port_config["qos"] }} dscp 46
{% endif %}
{% endif %}
{% endfor %}
